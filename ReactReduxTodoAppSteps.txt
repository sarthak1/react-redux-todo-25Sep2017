create-react-app redux-mastering
cd redux-mastering
yarn add redux react-redux
open redux-mastering folder on visual studio code
add reducers folder, actions folder and store.js file to src folder

--------------src/actions/index.js-------------------
const ADD_TODO = 'ADD_TODO'
export const addTodo = (text) => ({
    type: ADD_TODO,
    text,
    id: Math.random()
})


const DELETE_TODO = 'DELETE_TODO'
export const deleteTodo = (id) => ({
    type: DELETE_TODO,
    id
})


--------------src/reducers/todos.js-------------------
const initialState = {
    data: []
}

const todos = (state = initialState, action) => {
    switch (action.type) {
        case 'ADD_TODO':
            return {
                ...state,
                data: [...state.data, {
                    id: action.id,
                    text: action.text
                }]
            };
        case 'DELETE_TODO':
            const todos = state.data.filter(todo => todo.id !== action.id)
            return {
                ...state,
                data: todos
            };
        default:
            return state;
    }
}

export default todos;

--------------src/reducers/index.js-------------------
import { combineReducers } from 'redux';
import todos from './todos';

const rootReducer = combineReducers({
    todos
})

export default rootReducer;


--------------src/store.js-------------------
import { createStore } from 'redux';
import rootReducer from './reducers';

const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());

export default store;

--------------src/index.js-------------------
import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import registerServiceWorker from './registerServiceWorker';
import { Provider } from 'react-redux';
import store from './store';

ReactDOM.render(
    <Provider store={store}>
        <App />
    </Provider>
    , document.getElementById('root'));
registerServiceWorker();

-------------------------------------------------------------
yarn start

-----------------------src/components/AddTodo/AddTodo.js----------------------
import React from 'react';
import { connect } from 'react-redux';
import { addTodo } from '../../actions';

const AddTodo = (props) => (
    <form onSubmit={(event) => {
        event.preventDefault();
        let input = event.target.userInput.value;
        props.dispatch(addTodo(input));
        event.target.userInput.value = '';
    }}>
        <input type="text" name="userInput" />
        <button>Submit</button>
    </form>
)

export default connect()(AddTodo);

-----------------------src/App.js----------------------
import React, { Component } from 'react';
import './App.css';
import AddTodo from './components/AddTodo/AddTodo';
import List from './components/List/List';

class App extends Component {
  render() {
    return (
      <div className="App">
        <AddTodo />
        <List />
      </div>
    );
  }
}

export default App;



-----------------------src/components/List/List.js----------------------
import React from 'react';
import { connect } from 'react-redux';
import { deleteTodo } from '../../actions';

const List = (props) => (
    <ul>
        {props.todos.map((todo, index) => (
            <li key={index}>
                <span>{todo.text}</span>
                <button onClick={() => props.dispatch(deleteTodo(todo.id))}>
                    Delete
                </button>
            </li>
        ))}
    </ul>
)

const mapStateToProps = (state) => ({
    todos: state.todos.data
})

export default connect(mapStateToProps)(List);

